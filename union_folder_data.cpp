#include <iostream>
#include <fstream>                                          // ?????? ? ???????
#include <iomanip>                                          // ???????????? ?????/??????
#include <sstream>
#include <cstring>
#include <vector>
#include <iterator>
#include <windows.h>

using namespace std;
using std::cout;
using std::endl;

class distr                                            //?????, ?????????? ?????? ?? ?????? ?????
{
    private:
        vector <vector <double> > coord;               //?????? ??? ?????? 
    public:
        void initial(fstream &f)                       //?????????? ??????? ??????? ?? ?????
        {
            while(!f.eof())
            {
                double p;
                int i = 0;
                vector <double> temp;
                while(i < 2)                           //i = 2, ?.? 2 ???????, ?????? ?? ??????? ?? ????? ??????? ?? ??????????????(
                {
                    f >> p;
                    temp.push_back(p);                 //????????? ??????
                    i++;
                }
                coord.push_back(temp);
            }
            coord.pop_back();                           //??????? ?????????? ????????, ?.? ?????? ?????? ???????. ???? ?? ???, ??????!

        }
        void clear()                                   //??????? ?????????
        {
            coord.clear();
        }
        double get(int a, int b)                        //????? ????????? ?????? ???????
        {
            return(coord[a][b]);
        }
        int xSize() {return(coord.size());}              //??????????? ????????? ??????? ??????, ??? ??? ?? ???????? ???? ???????? ?? size-1. ? size -2
        int ySize() {return coord[0].size();}

};

void all_catalog(vector<string> &);                     //??????? ????????? ???? ????????? ? ?????
void record(vector<string> &, vector<distr> &);         //??????? ?????? ?????? ? ?????? ????????
void dat_file(string, vector<string> &);                //??????? ??? ????????? ?????? ?????? ? ???????
void record_data(vector<string> &, string, vector<distr> &);                         //??????? ????????? ???? ??? ?????? ? ?????


int main(int argc, char* argv[])
{
    setlocale(LC_ALL, "RUS");
    vector<string> catalogs;
    vector <distr> data;

    CreateDirectory("Union",NULL);
    CreateDirectory("Union/output",NULL);
    all_catalog(catalogs);
    record(catalogs, data);

    //cout << data[data.size()-1].get(0,1) << endl;
}

void all_catalog(vector<string> &catalogs_path)
{
    WIN32_FIND_DATA FindFileData;
    HANDLE hf;
    hf = FindFirstFile("*", &FindFileData);                 //????????? ????? ????????? ? ?????
    if (hf != INVALID_HANDLE_VALUE){
        do  {
             if ((FindFileData.dwFileAttributes & FILE_ATTRIBUTE_DIRECTORY) && (FindFileData.cFileName[0] != '.') &&
                    (FindFileData.cFileName[0] != 'U' ||
                     FindFileData.cFileName[1] != 'n' ||
                     FindFileData.cFileName[2] != 'i' ))
                 catalogs_path.push_back(FindFileData.cFileName);    //????????? ???????
            }
        while (FindNextFile(hf,&FindFileData)!=0);
        FindClose(hf);
}
}

void record(vector<string> &catalogs, vector<distr> &data)          //?????? ??????? ? ????????? ??????(????? ? ????? ????????? ?? ?????? ?????), ? ?????
{                                                                   //?? ?????????? ? ???? ???????? ????, ? ?? ???? ??????
    distr d;
    fstream f;
    string s;
    char filename[50];
    vector<string> distrib_file;

    dat_file(catalogs[0] + "/output" + "/*.dat", distrib_file);     // ????????? ?????? .dat ?????? ? ????????

    for(int j = 0; j < distrib_file.size(); ++j)                    //??????? ???? ?? ??????(???????? distrib_000001)
    {
        for(int i = 0; i < catalogs.size(); ++i)                    //????????? ???? ?? ?????????(???????? foil..)
        {
            s = catalogs[i] + "/output/" + distrib_file[j];
            strcpy(filename, s.c_str());
            f.open(filename);                                       //???????? ??????? ????? ? ?????? ?????? ? ?????? ????????
            if (!f.is_open())
            {
                cout << "???? " << s << " ?? ????? ???? ?????? ??? ??????\n";
            }
            d.initial(f);                                           //????????? ?????????
            data.push_back(d);
            d.clear();
            f.close();
        }
        record_data(catalogs, distrib_file[j], data);               //?????? ? ???????? ????
        data.clear();
        cout << s << endl;

    }
}

void dat_file(string s, vector<string> &distrib_file)
{
    WIN32_FIND_DATA FindFileData;
    HANDLE hf;
    char filename[50];
    strcpy(filename, s.c_str());
    hf = FindFirstFile(filename, &FindFileData);                 //????????? ????? ????????? ? ????? ????????????
    if (hf != INVALID_HANDLE_VALUE){
        do  {
                 distrib_file.push_back(FindFileData.cFileName);    //????????? ???????
            }
        while (FindNextFile(hf,&FindFileData)!=0);
        FindClose(hf);
}
}

void record_data(vector<string> &catalogs, string distrib_s, vector<distr> &data)    //?????? ???????? ??????(?????? ??? ????????!!)
{
    char filename[50];
    string s = "";
    fstream f;

    s  = "Union/output/" + distrib_s;
    strcpy(filename, s.c_str());
    f.open(filename, ios_base::out);                                                   //???????? ????????? ????? ? ?????? ??????
    if (!f.is_open())
    {
        cout << "???? " << s << " ?? ????? ???? ?????? ??? ??????\n";
    }
    f << setw(12) << setiosflags(ios::left) << "Energy" << " ";
    for(int i = 0; i < catalogs.size(); ++i)
        f << setw(12) << setiosflags(ios::left) << catalogs[i] << " ";                 //???????? ??????, ????? ???????? ?????????
    f << '\n';                                                                         //(??? ??????? ???-?? ????????????? ????)
    for(int j = 0; j < data[0].xSize(); ++j)
        {
            f << setw(12) << setiosflags(ios::left) << data[0].get(j,0) << " ";         //?????? ?????? ? ????
            for(int i = 0; i < data.size(); ++i)
                f << setw(12) << setiosflags(ios::left) <<data[i].get(j,1) << " ";
            f << '\n';
        }
    f.close();
}
